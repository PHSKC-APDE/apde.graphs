---
title: "Scatter Plots"
format: gfm
prefer-html: true
self-contained: false
editor: visual
knitr:
  opts_chunk:
    comment: ""
df-print: kable
---

This is a step-by-step guide to building a scatter plot with `ggplot2`. While you would typically write all components in a single code block using `+` to connect elements, we hope splitting the code will illustrate how each snippet contributes to the final visualization.

## Load libraries

```{r setup}
#| echo: true
#| output: false
library(ggplot2)
library(data.table)
library(apde.graphs)
```

## Import & preview synthetic data

```{r import_data}
dt <- apde.graphs::wisdomDT
head(dt)
```

## Create the base `ggplot2` scatter plot

```{r base_plot}
myplot <- ggplot(dt, aes(x = age,
                         y = wisdom_score,
                         color = group,    # different color for each group
                         shape = group)) + # different shape for each group
  
  # Basic scatter plot
  geom_point(alpha = 0.9,                  # dot transparency
             size = 3)                     # dot size
```

```{r display_base_plot}
#| fig-width: 10 
#| fig-height: 6 
#| dpi: 150 
#| message: false
#| echo: false

myplot
```

## Define scales (colors and shapes)

```{r add_scales}
myplot <- myplot +
  # Custom colors: can use names ('black') or hex ('#000000')
  scale_color_manual(values = c('Group 1' = '#7570B3',  
                                'Group 2' = '#1B9E77')) +
  
  # Custom dot shapes: options are 1:25
  scale_shape_manual(values = c('Group 1' = 1,  # 1 is hollow circle
                                'Group 2' = 2)) # 2 is hollow triangle
```

```{r display_with_scales}
#| fig-width: 10 
#| fig-height: 6 
#| dpi: 150 
#| message: false
#| echo: false

myplot
```

## Add labels

```{r add_labels}
myplot <- myplot +
  labs(
    title = 'Wisdom over the Lifespan',
    subtitle = 'Relationship between age and wisdom by group',
    x = 'Age (years)',
    y = 'Wisdom Score',
    color = 'Study Group', # title for the color legend
    shape = 'Study Group'  # title for the shape legend (same so that they combine into one legend)
  )
```

```{r display_with_labels}
#| fig-width: 10 
#| fig-height: 6 
#| dpi: 150 
#| message: false
#| echo: false

myplot
```

## Add APDE customizations

The `apde_caption()` and `apde_theme()` elements are from the `apde.graphs` package, not `ggplot2`.

```{r add_theme}
#| echo: true
#| output: false
myplot <- myplot +
  
  apde_caption(data_source = 'Synthetic dataset') +
  
  apde_theme()
```

```{r display_with_custom_themes}
#| fig-width: 10 
#| fig-height: 6 
#| dpi: 150 
#| message: false
#| echo: false

myplot
```

## Add vertical reference line

Note the age of peak wisdom for Group 2.

```{r add_ref_line}
myplot <- myplot +
  # use geom_hline for horizontal lines
  geom_vline(xintercept = 50,
             linetype = 'dotted', # also 'solid', 'dashed', 'dotdash', 'longdash', and 'twodash'
             linewidth = 1,       # width of line
             color = '#1B9E77')   # color of line
```

```{r display_with_vertical_line}
#| fig-width: 10 
#| fig-height: 6 
#| dpi: 150 
#| message: false
#| echo: false

myplot
```

## Add annotations

```{r add_annotations}
myplot <- myplot +

  # annotate a specific point with text
  annotate(
    geom = 'text', 
    size = 4,
    x = 34, y = 19.9,                       # set coordinates based on the scale in your graphic
    label = '50 = peak wisdom for group 2',
    hjust = 0,                              # horizontal justification
    vjust = 0) +                            # vertical justification
  
  # point to something with an arrow
  annotate(
    geom = "segment", 
    x = 46, xend = 49.5,
    y = 20, yend = 20.5,
    arrow = arrow(length = unit(0.2, "cm"))) +
  
  # highlight a rectangle
  annotate(
    geom = 'rect',                          # highlight an area of your graph
    xmin = 33, xmax = 55,
    ymin = 19.85, ymax = 20,
    alpha = 0.2,                            # transparency of rectangle
    fill = 'green',                         # color of rectangle
    col = NA)                               # color of outline, NA == no outline
```

```{r display_plot}
#| fig-width: 10 
#| fig-height: 6 
#| dpi: 150 
#| message: false
#| echo: false

myplot
```

## Add trend lines

Add trend lines to better discern the patterns displayed by the scatter plot.

```{r add_trend_lines}
myplot <- myplot +
  # Add smoothed fit lines with confidence intervals
  geom_smooth(method = 'loess',            # LOESS for non-linear trends, can also use 'lm' or 'glm'
              se = TRUE,                   # show CI
              alpha = 0.5,                 # transparency of CI
              linewidth = 1.2)             # line thickness
```

```{r display_with_trend_lines}
#| fig-width: 10 
#| fig-height: 6 
#| dpi: 150 
#| message: false
#| echo: false

myplot
```

## Add legend transparency

```{r add_legend_customization}
myplot <- myplot +
  guides(shape = guide_legend(
    override.aes = list(alpha = 0) # legend background completely transparent
    ))
```

```{r display_with_custom_legends}
#| fig-width: 10 
#| fig-height: 6 
#| dpi: 150 
#| message: false
#| echo: false

myplot
```

## Save the plot

`ggsave()` automatically detects file type from filename extension (.jpg, .png, .pdf, etc.).

```{r save_plot}
#| echo: true
#| output: false
#| eval: false
ggsave(filename = 'wisdom_age_plot.jpg', 
       plot = myplot, 
       width = 10, 
       height = 6, 
       dpi = 600, 
       units = 'in') # also 'cm', 'mm', 'px'
```

-- *`r paste0("Updated by ", Sys.getenv("USERNAME"), ", ", Sys.Date())`*
