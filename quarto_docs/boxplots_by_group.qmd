---
title: "Boxplots (a.k.a. Box and Whisker Plots)"
format: gfm
prefer-html: true
self-contained: false
editor: visual
knitr:
  opts_chunk:
    comment: ""
df-print: kable
---

This is a step-by-step guide to building a boxplot using `ggplot2`. While you would typically write all components in a single code block using `+` to connect elements, we hope splitting the code will illustrate how each snippet contributes to the final visualization.

## Load libraries

```{r setup}
#| echo: true
#| output: false
library(ggplot2)
library(data.table)
library(apde.graphs)
```

## Import & preview synthetic data

```{r import_data}
dt <- apde.graphs::lifespanDT_raw
head(dt)
```

## Create initial boxplot

Start with a basic boxplot showing lifespan distributions by city.

```{r initial_plot}
myplot <- ggplot(dt, 
                 aes(x = city, 
                     y = lifespan)) +
  geom_boxplot(staplewidth = 0.8)     # width of end caps on whiskers (0 = none, 1 = full box width)
```

```{r display_initial}
#| fig-width: 11 
#| fig-height: 8.5
#| dpi: 150
#| echo: false
#| warning: false
myplot
```

## Add color scheme

Add custom colors to the boxplots and points.

```{r add_colors}
myplot <- myplot +
  # Update boxplot colors
  geom_boxplot(fill = '#1B9E77',     # fill for boxes
               color = '#333333',    # box outlines
               alpha = 0.6,          # transparency
               staplewidth = 0.8)    # width of end caps on whiskers (0 = none, 1 = full box width)
```

```{r display_with_colors}
#| fig-width: 11 
#| fig-height: 8.5
#| dpi: 150
#| echo: false
#| warning: false
myplot
```

## Format axes

Add custom axis labels and adjust the scale.

```{r format_axes}
myplot <- myplot +
  labs(title = "Distribution of Lifespans in Ancient Cities",
       x = "",                                       # no x-axis label needed
       y = "Age (years)") +   
  scale_y_continuous(breaks = seq(0, 100, by = 10))  # set y-axis breaks every 10 years

```

```{r display_with_axes}
#| fig-width: 11 
#| fig-height: 8.5
#| dpi: 150
#| echo: false
#| warning: false
myplot
```

## Add APDE customizations

The `apde_caption()` and `apde_theme()` elements are from the `apde.graphs` package, not `ggplot2`.


```{r add_theme}
#| message: false
myplot <- myplot +
  apde_theme() +
  apde_caption(data_source = "Synthetic dataset")
```

```{r display_with_theme}
#| fig-width: 11 
#| fig-height: 8.5
#| dpi: 150
#| echo: false
#| warning: false
myplot
```

## Rotate horizontally

Convert to horizontal orientation for better readability.

```{r flip_coords}
myplot <- myplot +
  coord_flip()
```

```{r display_flipped}
#| fig-width: 11 
#| fig-height: 8.5
#| dpi: 150
#| echo: false
#| warning: false
myplot
```

## Tweak theme

Left justify city names.

```{r theme_tweak}
myplot <- myplot +
  theme(
    axis.text.y = element_text(hjust = 0) # hjust = 0 = left, hjust = 1 = right, hjust = 0.5 = center
    )
```

```{r display_theme_tweak}
#| fig-width: 11 
#| fig-height: 8.5
#| dpi: 150
#| echo: false
#| warning: false
myplot
```

## Add individual points (OPTIONAL)

Add jittered points to show the distribution of individual data points. While these points are not part of a standard boxplot, their display may help the many people who do not know how to properly read a boxplot.

```{r add_points}
myplot <- myplot +
  geom_jitter(width = 0.2,           # amount of horizontal jitter
              alpha = 0.2,           # transparency
              size = 0.5,            # point size
              color = '#7570B3')     # color for points
```

```{r display_with_points}
#| fig-width: 11 
#| fig-height: 8.5
#| dpi: 150
#| echo: false
#| warning: false
myplot
```

## Add a point for the mean (OPTIONAL)

Box plots do not normally display the mean. However, you may want to display the mean to assess whether it is substantially different from the median.

```{r add_stats}
#| warning: false
#| message: false
myplot <- myplot +
  stat_summary(fun = "mean",
              geom = "point",
              shape = 23,          # point shape (diamond)
              size = 3,            # point size
              fill = "white",      # fill color
              color = "black")     # border color
```

```{r display_with_stats}
#| fig-width: 11 
#| fig-height: 8.5
#| dpi: 150
#| echo: false
#| warning: false
myplot
```

## Save the plot

```{r save_plot}
#| echo: true
#| output: false
#| eval: false

ggsave('boxplot_ancient_city_lifespans.jpg',
       myplot,
       width = 11,
       height = 8.5,
       dpi = 600,
       units = 'in')
```

-- *`r paste0("Created by ", Sys.getenv("USERNAME"), ", ", Sys.Date())`*
